Project 1 Report

Front Matter: Sean Duffy 
              2018-10-07
			  Project 1 
			  ECEN5813

1. Ignoring the functionality that was added to the assignent after the Project Plan was made
   my overall estimate was fairly accurate, although the effort allocated to each line item was
   fairly inaccurate. For example, most of my code development estimates were a little aggressive.
   This is likely because I was pushing myself to use a new text editor (vim) for some part of the
   project and also because I was relatively unfamiliar with the string library which I ended up
   utilizing substantially. However, creating the makefile and managing the git repository took
   much less time than I expected. I was fairly unfamiliar with these tools before the project,
   but they were easier to use than I expected. In the case of git, this was likely because 
   I was working alone.
   
2. I did not include the development of the automated test script in my original project plan. 
   Luckily, this task did not take much effort.
   
3. TODO

4. When trying to read outside of an allocated block (assuming you ignore the warning), there 
   are 2 possible outcomes. The first possible outcome is that the read occurs normally and the
   value stored in that memory location is displayed to the screen. The second possible outcome
   is that a segmentation fault occurs because that memory address either doesn't exist or 
   is not available for reading by this program.
   
5. When trying to write outside of an allocated block (assuming you ignore the warning), there 
   are 2 possible outcomes. The first possible outcome is that the write occurs normally and the
   value is written to the unallocated memory location. The second possible outcome is that a 
   segmentation fault occurs because that memory address either doesn't exist or  is not 
   available for writing by this program.
   
6. No, the time to invert different size blocks of memory did not appear to be linear to the 
   size of the block. In fact, there was even some variability within the measured time taken
   to invert the same block of memory between different trials (see #7). However, as the size 
   of the blocks increased, the relationship seemed to become more linear, with the most
   non-linearity coming from inverting the smallest blocks (also probably related to #7).
   
7. There are a few limitations to the time measurements made here. Time measurements made by
   any digital computer system are limited in resolution by the frequency of some oscillator.
   This means that differences less than that resolution are not reflected in the measurement.
   These time measurements are also impacted by the operating system that is managing the tasks
   on this computer. This effects our measurement of the time taken to execute our command because
   the operating system may briefly stop executing our command to perform other tasks. Time measurements
   are also limited in range in digital systems by a finite amount of storage space allocated for them,
   but those limitations are less relevant here.
   
8. To optimize my program purely for speed, I could:
    - combine my command validation and command execution functions to reduce function-call overhead
	- write specialized string handling functions for handling only the required functionality here

9. My pseudo-random number generator was a simple function that multiplied a compounding seed
   by an arbitarily-chosen prime number (37). Then, the number that is written is the product of the
   new seed and the address of a public function accessible by all modules and every other bit is 
   flipped (^0xAA..). The advantages of this algorithm are that it is cheap in terms of memory and
   computation time. The fact that this generator uses the address of a function which is
   means that the sequence can change from executions of the executable. This can be considered 
   an advantage or a disadvantage. It makes it more difficult to formally validate, but it does
   increase the unpredicitability of the result in some scenarios. 
   





